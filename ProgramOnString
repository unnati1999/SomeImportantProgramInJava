1.Compare  two strings
public class Abc{
    public static void main (String[] args) {
        String a="unnati";
        String b="varshney";
        System.out.println(a.CompareTo(b));
    }
}
2.Search the last position of a String
public class Abc{
    public static void main (String[] args) {
        String s="my name is unnati";
        String subStr="unnati";
        System.out.println(s.lastIndexOf(subStr));
    }
}
3.Remove A particular character from a string
public class Abc{
    public static void main (String[] args) {
        String str="my name is unnati";
        System.out.println(charRemoveAt(str,4));
    }
    public static String charRemoveAt(String str, int p) {  
              return str.substring(0, p) + str.substring(p + 1);  
           }  
}
4.Replace a substring inside a String
public class Abc{
    public static void main (String[] args) {
        String str="my name is unnati";
        System.out.println(str.replace("unnati","varshney"));
    }
    }
5.Reverse a String in java 
public class Abc{
    public static void main (String[] args) {
        String str="my name is unnati";
        StringBuilder input1=new StringBuilder();
        input1.append(str);
        input1=input1.reverse();
        System.out.println(input1);
    }
}
6.Search a word inside a String
public class Abc{
    public static void main (String[] args) {
        String s="india is my country";
        int index=s.indexOf("my");
        System.out.println(index);
    }
}
7.Splits String in array
public class Abc{
    public static void main (String[] args) {
        String s="india-is-my-country";
        String parts[]=s.split("-");
        for(int i =0;i<=parts.length;i++)
        System.out.println(parts[i]);
    }
}
8.Upper case 
public class Abc{
    public static void main (String[] args) {
        String s="india-is-my-country";
        String s1=s.toUpperCase();
        System.out.println(s1);
    }
}
9.print even length word in a string
public class Print { 
    public static void printWords(String s) 
    { 
  
        // Splits Str into all possible tokens 
        for (String word : s.split(" ")) 
  
            // if length is even 
            if (word.length() % 2 == 0) 
  
                // Print the word 
                System.out.println(word); 
    } 
  
    // Driver Code 
    public static void main(String[] args) 
    { 
  
        String s = "jini rahul nikhil kapil"; 
        printWords(s); 
    } 
}
10.Convert a Double into String
public class A{
    public static void main (String[] args) {
        String str="99.89888";
        Double val=Double.parseDouble(str);
    System.out.println(val);
    //Second method
    String str2="444.546";
    double val2=Double.valueOf(str2);
    System.out.println(val2);
        }
}
11.String is anagram or not
import java.util.Arrays;
public class Tsst{
    public static void main (String[] args) {
        String s1="silent";
        String s2="listen";
        char a[]=s1.toCharArray();
        char b[]=s2.toCharArray();
        Arrays.sort(a);
        Arrays.sort(b);
        Boolean results=Arrays.equals(a,b);
        if(results==true)
        {
            System.out.println("String is anagram");
        }
        else{
            System.out.println("String is not anagram");
        }
    }
}
12.String is anaagram or not if it contain whitespace
import java.util.Arrays;
public class Test{
    public static void main(String[]args)
    {
    String x="HE Is araDHya";
    String y="is He HARDAYA";
    x=x.replace(" ","");
    y=y.replace(" ","");
    x=x.toLowerCase();
    y=y.toLowerCase();
    char a[]=x.toCharArray();
    char b[]=y.toCharArray();
    Arrays.sort(a);
    Arrays.sort(b);
    Boolean result=Arrays.equals(a,b);
    if(result==true)
    {
        System.out.println("String is anagram");
    }
    else{
        System.out.println("String is not a anagram");
    }
}
}
13.String is panagram or not
import java.util.Arrays;
public class Test {
    public static void main (String[] args) {
    String x="THE QUICK BROWN FOX JUMPS OVER A LAZY DOG";
        x=x.replace(" ","");
        char y[]=x.toCharArray();
        int size=y.length;
        char a[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
        int i=0;
        while(i!=size)
        {
            int index=y[i]-65;
            a[index]=1;
            ++i;
        }
        i=0;
        while(i!=26)
        {
            if(a[i]==1)
            {
                ++i;
            }
            else
            {
                System.out.println("not panagram");
                System.exit(0);
            }
        }
    System.out.println("panagram");
    }
    
}
14.check the string contain unique charchater or not
import java.util.*;
public class Test{
    public static void main (String[] args) {
        String x="unnaaattii";
        char y[]=x.toCharArray();
        int size=y.length;
        Map<Character,Integer>map=new HashMap<>();
        int i=0;
        while(i!=size)
        {
            if(map.containsKey(y[i])==false);
            {
                map.put(y[i],1);
            }
            else
            {
                int oldval=map.get(y[i]);
                int newval=oldVal+1;
                map.put(y[i],newval);
            }
            ++i;
        }
        Set<Map.Entry<Character,integer>>hmap=map.entrySet();
        for(Map.Entry<Character,Integer> data:hmap)
        {
            if(data.getValue()>1)
            {
                System.out.println("does not contain duplicate charchater");
                System.exit(0);
                
            }
        }
                    System.out.println("conatin unique charchacter");

    }
    }
